generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cliente {
  id       Int       @id @default(autoincrement())
  nombre   String    @db.VarChar(15)
  apellido String    @db.VarChar(15)
  email    String    @unique(map: "Cliente_email_key") @db.VarChar(255)
  Reserva  reserva[]
}

model hora {
  id      Int       @id @default(autoincrement())
  hora    String    @db.VarChar(10)
  Reserva reserva[]
}

model profesional {
  id                  Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(30)
  usuarioId           Int                   @unique(map: "usuarioId")
  
  usuario             usuario               @relation(fields: [usuarioId], references: [id])
  servicioprofesional servicioprofesional[]
}

model reserva {
  id           Int      @id @default(autoincrement())
  fechaCreada  DateTime @default(now())
  fechaReserva DateTime @db.Date
  total        Int
  servicioId   Int
  clienteId    Int
  horaId       Int
  token        String   @db.VarChar(100)
  confirmada   Boolean  @default(false)
  servicioprofesionalId Int             // Nuevo campo para la relación directa

  cliente  cliente  @relation(fields: [clienteId], references: [id])
  hora     hora     @relation(fields: [horaId], references: [id])
  servicio servicio @relation(fields: [servicioId], references: [id])
  servicioprofesional servicioprofesional @relation(fields: [servicioprofesionalId], references: [id])

  @@index([clienteId], map: "clienteId")
  @@index([horaId], map: "horaId")
  @@index([servicioId], map: "reserva_servicioId")
  @@index([servicioprofesionalId], map: "servicioprofesionalId") // Nuevo índice
}

model servicio {
  id                  Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(30)
  precio              Int
  descripcion         String                @db.VarChar(500)
  Reserva             reserva[]
  servicioprofesional servicioprofesional[]
}

model usuario {
  id       Int    @id @default(autoincrement())
  email    String @unique(map: "Usuario_email_key") @db.VarChar(255)
  password String @db.VarChar(15)
  rol      Int    @default(1)
  profesional profesional[]
}

model servicioprofesional {
  id            Int         @id @default(autoincrement())
  servicioId    Int
  profesionalId Int
  profesional   profesional @relation(fields: [profesionalId], references: [id], map: "servicioProfesional_profesionalId_fkey")
  servicio      servicio    @relation(fields: [servicioId], references: [id], map: "servicioProfesional_servicioId_fkey")

  @@index([profesionalId], map: "profesionalId")
  @@index([servicioId], map: "servicioId")

  reserva reserva[]
}
