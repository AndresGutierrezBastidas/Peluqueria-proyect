generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cliente {
  id       Int    @id @default(autoincrement())
  nombre   String @db.VarChar(15)
  apellido String @db.VarChar(15)
  email    String @unique(map: "Cliente_email_key") @db.VarChar(255)

  usuario usuario?
  Reserva reserva[]
}

model hora {
  id   Int    @id @default(autoincrement())
  hora String @db.VarChar(10)

  Reserva reserva[]
}

model profesional {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(30)

  serPro servicioProfesional[]
}

model reserva {
  id           Int      @id @default(autoincrement())
  fechaCreada  DateTime @default(now())
  fechaReserva DateTime @db.Date
  total        Int
  servicioId   Int
  clienteId    Int
  horaId       Int

  servicio servicio @relation(fields: [servicioId], references: [id])
  cliente  cliente  @relation(fields: [clienteId], references: [id])
  hora     hora     @relation(fields: [horaId], references: [id])

  @@index([clienteId], map: "clienteId")
  @@index([horaId], map: "horaId")
  @@index([servicioId], map: "servicioId")
}

model servicio {
  id          Int    @id @default(autoincrement())
  nombre      String @db.VarChar(30)
  precio      Int
  descripcion String @db.VarChar(500)

  Reserva reserva[]
  serPro  servicioProfesional[]
}

model servicioProfesional {
  id            Int @id @default(autoincrement())
  servicioId    Int
  profesionalId Int

  profesional profesional @relation(fields: [profesionalId], references: [id])
  servicio    servicio    @relation(fields: [servicioId], references: [id])

  @@index([servicioId], map: "servicioId")
  @@index([profesionalId], map: "profesionalId")
}

model usuario {
  id       Int    @id @default(autoincrement())
  password String @db.VarChar(15)
  rol      Int    @default(1)
  clientId Int    @unique(map: "Usuario_clientId_key")

  cliente cliente @relation(fields: [clientId], references: [id])
}